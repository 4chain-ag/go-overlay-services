openapi: 3.0.4
info:
  version: 1.0.0
  title: Overlay HTTP API
  description: The overlay server API

servers:
  - url: http://localhost:3000

tags:
  - name: admin
    description: Admin API endpoints
  - name: non-admin
    description: Non Admin API endpoints

paths:
  /api/v1/admin/syncAdvertisements:
    post:
      tags:
        - admin
      operationId: AdvertisementsSync
      security:
        - bearerAuth:
            - admin
      responses:
        200:
          $ref: '../paths/admin/responses.yaml#/components/responses/AdvertisementsSyncResponse'
        500:
          $ref: '#/components/responses/InternalServerErrorResponse'

  /api/v1/getDocumentationForLookupServiceProvider:
    get:
      tags:
        - non-admin
      operationId: GetLookupServiceProviderDocumentation
      security:
        - bearerAuth:
            - user
      parameters:
        - in: query
          name: lookupServiceProvider
          schema:
            type: string
          required: true
          description: The name of the lookup service provider to retrieve documentation for
      responses:
        200:
          $ref: '../paths/non_admin/responses.yaml#/components/responses/LookupServiceProviderDocumentationResponse'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        500:
          $ref: '#/components/responses/InternalServerErrorResponse'
          
  /api/v1/admin/startGASPSync:
    post:
      tags:
        - admin
      operationId: StartGASPSync
      security:
        - bearerAuth:
            - admin
      responses:
        200:
          $ref: '../paths/admin/responses.yaml#/components/responses/StartGASPSyncResponse'

  /api/v1/getDocumentationForTopicManager:
    get:
      tags:
        - non-admin
      operationId: GetTopicManagerDocumentation
      security:
        - bearerAuth:
            - user
      parameters:
        - in: query
          name: topicManager
          schema:
            type: string
          required: true
          description: The name of the topic manager to retrieve documentation for
      responses:
        200:
          $ref: '../paths/non_admin/responses.yaml#/components/responses/TopicManagerDocumentationResponse'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        500:
          $ref: '#/components/responses/InternalServerErrorResponse'

  /api/v1/submit:
    post:
      tags:
        - non-admin
      operationId: SubmitTransaction
      security:
        - bearerAuth:
            - user
      parameters:
        - in: header
          name: x-topics
          schema:
            type: array
            items:
              type: string
          required: true
          explode: true
          style: simple
      requestBody:
        required: true
        $ref: '../paths/non_admin/request-bodies.yaml#/components/requestBodies/SubmitTransactionBody'
      responses:
        200:
          $ref: '../paths/non_admin/responses.yaml#/components/responses/SubmitTransactionResponse'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        500:
          $ref: '#/components/responses/InternalServerErrorResponse'
        409:
          $ref: '#/components/responses/RequestTimeoutResponse'

components:
  schemas:
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Human-readable error message

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  responses:
    BadRequestResponse:
      description: |
        The server cannot process the request due to malformed syntax or invalid input.
        This error is typically caused by client-side issues, such as missing required parameters,
        invalid data formats, or incorrect request structures.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundResponse:
      description: |
        The requested resource could not be found. This error occurs when the client
        requests an endpoint or resource that does not exist on the server or cannot be located.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerErrorResponse:
      description: |
        An unexpected condition was encountered on the server, causing the request to fail.
        This error is typically caused by internal issues such as server misconfigurations,
        database failures, or unhandled exceptions.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RequestTimeoutResponse:
      description: |
        The server did not receive a complete request within the time it was prepared to wait.
        This error can occur if the clientâ€™s request takes too long to process or there is network latency.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
